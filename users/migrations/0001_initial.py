# Generated by Django 2.1.2 on 2018-11-08 14:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick', models.CharField(blank=True, default='', help_text='昵称', max_length=30, null=True, verbose_name='昵称')),
                ('birthday', models.DateField(blank=True, help_text='出生年月', null=True, verbose_name='出生年月')),
                ('gender', models.IntegerField(choices=[(0, '女'), (1, '男')], default=0, verbose_name='性别')),
                ('platform', models.CharField(choices=[('ios', '苹果用户'), ('android', '安卓设备'), ('core', '未知设备')], default='core', max_length=20, verbose_name='登录设备类型')),
                ('device_id', models.CharField(blank=True, default='', max_length=40, null=True, verbose_name='设备id')),
                ('register_ip', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='注册时候的IP')),
                ('phone', models.CharField(blank=True, default='', max_length=11, null=True, verbose_name='手机号码')),
                ('level', models.CharField(choices=[(0, '普通用户'), (1, '一级用户')], default=0, max_length=2, verbose_name='用户等级')),
                ('oauth_openid', models.CharField(default='', max_length=128, verbose_name='第三方openid')),
                ('oauth_avatar', models.CharField(default='', max_length=200, verbose_name='第三方头像')),
                ('oauth_from', models.CharField(choices=[('weixin', '微信'), ('weibo', '微博'), ('qq', 'QQ'), ('phone', '手机')], default='', max_length=10, verbose_name='验证来源')),
                ('oauth_userinfo', models.TextField(default='', verbose_name='来自第三方平台的用户额外信息')),
                ('oauth_time', models.DateTimeField(blank=True, null=True, verbose_name='绑定第三方帐号时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否被删除')),
                ('balance', models.FloatField(default=0.0, verbose_name='当前余额')),
                ('total', models.FloatField(default=0.0, verbose_name='总充值')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户余额',
                'verbose_name_plural': '用户余额',
            },
        ),
        migrations.CreateModel(
            name='PayAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否被删除')),
                ('action', models.IntegerField(choices=[(1, '充值'), (2, '出价'), (3, '提现')], verbose_name='操作')),
                ('amount', models.IntegerField(verbose_name='具体金额')),
                ('balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Balance', verbose_name='用于余额')),
            ],
            options={
                'verbose_name': '用户支付操作',
                'verbose_name_plural': '用户支付操作',
            },
        ),
    ]
